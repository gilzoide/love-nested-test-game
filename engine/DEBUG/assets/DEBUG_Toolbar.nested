Rectangle

x: 0
y: `WINDOW_HEIGHT`
height: 32
width: `WINDOW_WIDTH`
fillColor: [0.34902 0.615686 0.862745]

fgColor: [1 1 1]
appPaused: false
margins: 10

[Text id: TITLE text: DEBUG font: `DEBUG.font` color: `fgColor`
    width: 70 height: 32
    align: center valign: center
]
[Button id: PAUSE_BUTTON
    x: `TITLE.width` y: 0
    width: `self.height` height: `root.height`
    fillColor: false
    lineColor: `root.fgColor`

    onclick: `do
        root.appPaused = not appPaused
        Scene.paused = appPaused
    end`

    [Image image: `PAUSE_BUTTON.appPaused and playImage or pauseImage`
        pauseImage: { R DEBUG_Pause.png }
        playImage: { R DEBUG_Play.png }
        x: 0 y: 0
    ]
]
[InputMap id: KEY
    key: [
        pan_up: [up w]
        pan_left: [left a]
        pan_down: [down s]
        pan_right: [right d]
        scale_up: [e]
        scale_down: [q]
        edit_faster: [lshift rshift]
    ]
]
[Rectangle id: DEBUG_TRANSFORM
    x: `PAUSE_BUTTON.x + PAUSE_BUTTON.width` y: 0
    width: 250 height: `root.height`
    margin: 10
    lineColor: `root.fgColor`

    [Text id: TEXT_X x: `parent.margin` right: `parent.width * 0.7` height: `parent.height` font: `DEBUG.font`
        text: `string.format("x: %d", math.floor(DEBUG.x))`
        align: left valign: center
    ]
    [Text id: TEXT_Y x: `parent.width * 0.3` right: `parent.width * 0.4` height: `parent.height` font: `DEBUG.font`
        text: `string.format("y: %d", math.floor(DEBUG.y))`
        align: left valign: center
    ]
    [Text x: `parent.width * 0.6` right: `parent.margin` height: `parent.height` font: `DEBUG.font`
        text: `string.format("scale: %.2f", DEBUG.sx)`
        align: left valign: center
    ]

    scaleSpeed: 0.01
    scaleMin: 0.1
    scaleMax: 9
    editSpeed: `KEY.edit_faster.down and 5 or 1`

    addScale: `do
        local self, delta = ...
        DEBUG.sx = clamp(DEBUG.sx + delta * scaleSpeed * editSpeed, scaleMin, scaleMax)
        DEBUG.sy = DEBUG.sx
    end`
    addTranslation: `do
        local self, dx, dy = ...
        DEBUG.x = DEBUG.x + dx * editSpeed
        DEBUG.y = DEBUG.y + dy * editSpeed
    end`

    [MouseArea id: DEBUG_POSITION_MOUSE
        editing: false
        [When
            button.1.pressed: `do love.mouse.setGrabbed(true); love.mouse.setRelativeMode(true); self.editing = true end`
            button.1.released: `do love.mouse.setGrabbed(false); love.mouse.setRelativeMode(false); self.editing = false end`
            button.2.pressed: `do
                DEBUG.x = 0
                DEBUG.y = 0
                DEBUG.sx = 1
                DEBUG.sy = 1
            end`
            'editing, mouse.moved': `do DEBUG_TRANSFORM:addTranslation(mouse.moved.dx, mouse.moved.dy) end`
            'wheelmoved': `do DEBUG_TRANSFORM:addScale(wheelmoved.y) end`
            'editing, KEY.pan_up.down': `do DEBUG_TRANSFORM:addTranslation(0, 1) end`
            'editing, KEY.pan_left.down': `do DEBUG_TRANSFORM:addTranslation(1, 0) end`
            'editing, KEY.pan_down.down': `do DEBUG_TRANSFORM:addTranslation(0, -1) end`
            'editing, KEY.pan_right.down': `do DEBUG_TRANSFORM:addTranslation(-1, 0) end`
            'editing, KEY.scale_up.down': `do DEBUG_TRANSFORM:addScale(1) end`
            'editing, KEY.scale_down.down': `do DEBUG_TRANSFORM:addScale(-1) end`
        ]
    ]
]

[Text font: `DEBUG.font` right: `root.margins` height: `root.height`
    text: `string.format("FPS: %d", love.timer.getFPS())`
    align: right valign: center
]

[Graphics draw: `do
    setColor(root.fgColor)
    line(0, 0, self.width, 0)
end`]
