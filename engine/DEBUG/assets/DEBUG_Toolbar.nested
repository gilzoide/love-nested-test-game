Rectangle

x: 0
y: `WINDOW_HEIGHT`
height: 32
width: `WINDOW_WIDTH`
fillColor: [0.34902 0.615686 0.862745]

fgColor: [1 1 1]
appPaused: false

[Text id: TITLE text: DEBUG font: `DEBUG.font` color: `fgColor`
    x: 10 y: `(parent.height - self.height) * 0.5`
]
[Button id: PAUSE_BUTTON
    x: `TITLE.right + TITLE.x` y: 0
    width: `self.height` height: `root.height`
    fillColor: false
    lineColor: `root.fgColor`

    onclick: `do
        root.appPaused = not appPaused
        Scene.paused = appPaused
    end`

    [Image image: `PAUSE_BUTTON.appPaused and playImage or pauseImage`
        pauseImage: { R DEBUG_Pause.png }
        playImage: { R DEBUG_Play.png }
        x: 0 y: 0
    ]
]
[InputMap id: KEY
    key: [
        pan_up: [up w]
        pan_left: [left a]
        pan_down: [down s]
        pan_right: [right d]
        scale_up: [up w right d]
        scale_down: [down s left a]
        edit_faster: [lshift rshift]
    ]
]
[Rectangle id: DEBUG_POSITION
    x: `PAUSE_BUTTON.x + PAUSE_BUTTON.width` y: 0
    width: 150 height: `root.height`
    lineColor: `root.fgColor`

    [Text x: 10 y: `TITLE.y` font: `DEBUG.font`
        update: `do self.text = string.format("x: %d", math.floor(DEBUG.x)) end`
    ]
    [Text x: `parent.width * 0.5` y: `TITLE.y` font: `DEBUG.font`
        update: `do self.text = string.format("y: %d", math.floor(DEBUG.y)) end`
    ]

    editSpeed: `KEY.edit_faster.down and 5 or 1`

    [MouseArea id: DEBUG_POSITION_MOUSE
        [When
            button.1.pressed: `do love.mouse.setGrabbed(true); love.mouse.setRelativeMode(true) end`
            button.1.released: `do  love.mouse.setGrabbed(false); love.mouse.setRelativeMode(false) end`
            button.2.pressed: `do
                DEBUG.x = 0
                DEBUG.y = 0
            end`
            'button.1.down, mouse.moved': `do
                local dx, dy, editSpeed = mouse.moved.dx, mouse.moved.dy, DEBUG_POSITION.editSpeed
                DEBUG.x = DEBUG.x + dx * editSpeed
                DEBUG.y = DEBUG.y + dy * editSpeed
            end`
            'button.1.down, KEY.pan_up.down': `do
                DEBUG.y = DEBUG.y + DEBUG_POSITION.editSpeed
            end`
            'button.1.down, KEY.pan_left.down': `do
                DEBUG.x = DEBUG.x + DEBUG_POSITION.editSpeed
            end`
            'button.1.down, KEY.pan_down.down': `do
                DEBUG.y = DEBUG.y - DEBUG_POSITION.editSpeed
            end`
            'button.1.down, KEY.pan_right.down': `do
                DEBUG.x = DEBUG.x - DEBUG_POSITION.editSpeed
            end`
        ]
    ]
]
[Rectangle id: DEBUG_SCALE
    x: `DEBUG_POSITION.x + DEBUG_POSITION.width` y: 0
    width: 100 height: `root.height`
    lineColor: `root.fgColor`

    moveScale: 0.01
    editSpeed: `KEY.edit_faster.down and 5 or 1`
    minScale: 0.1
    maxScale: 9

    [Text x: 10 y: `TITLE.y` font: `DEBUG.font`
        update: `do self.text = string.format("scale: %.2f", DEBUG.sx) end`
    ]

    [MouseArea id: DEBUG_POSITION_MOUSE
        [When
            button.1.pressed: `do love.mouse.setGrabbed(true); love.mouse.setRelativeMode(true) end`
            button.1.released: `do  love.mouse.setGrabbed(false); love.mouse.setRelativeMode(false) end`
            button.2.pressed: `do
                DEBUG.sx = DEBUG_SCALE.editSpeed
                DEBUG.sy = DEBUG_SCALE.editSpeed
            end`
            'button.1.down, mouse.moved': `do
                local delta = math.max(mouse.moved.dx, mouse.moved.dy) * DEBUG_SCALE.moveScale * DEBUG_SCALE.editSpeed
                DEBUG.sx = clamp(DEBUG.sx + delta, DEBUG_SCALE.minScale, DEBUG_SCALE.maxScale)
                DEBUG.sy = DEBUG.sx
            end`
            'button.1.down, KEY.scale_up.down': `do
                local delta = DEBUG_SCALE.moveScale * DEBUG_SCALE.editSpeed
                DEBUG.sx  = clamp(DEBUG.sx + delta, DEBUG_SCALE.minScale, DEBUG_SCALE.maxScale)
                DEBUG.sy = DEBUG.sx
            end`
            'button.1.down, KEY.scale_down.down': `do
                local delta = DEBUG_SCALE.moveScale * DEBUG_SCALE.editSpeed
                DEBUG.sx  = clamp(DEBUG.sx - delta, DEBUG_SCALE.minScale, DEBUG_SCALE.maxScale)
                DEBUG.sy = DEBUG.sx
            end`
        ]
    ]
]

[Graphics draw: `do
    setColor(root.fgColor)
    line(0, 0, self.width, 0)

    setFont(DEBUG.font)
    printf(string.format("FPS: %d", love.timer.getFPS()), 0, TITLE.y, WINDOW_WIDTH, 'right')
end`]
